---
layout: post
title: "Internship-second-month"
date: 2013-08-21 20:18
comments: true
categories:
---
So I've been keeping a log since I started my internship to help me keep track of my hours and also help me troubleshoot. I realized how important this was when I went through the code school experience because at certain points I had no idea what I had downloaded/added/modified on my machine and it took time to backtrack. Another plus for keeping a log is for when you want to reproduce your project. That might seem strange but I've found myself many times wanting to just start fresh in a similar environment and then become bogged down with barriers that I had already dealt with but had forgotten about. During my internship, I began to keep two text files: 1. a general log of system changes that I made and 2. a cheat sheet for stuff I should know but kept failing to remember and how to quickly re-do projects I'd made and wanted to do again. Of course I wouldn't know that I'd want to repeat a project until I played with it - which is why the log was so helpful. For example: my workspace likes to work with python and you should create a virtual environment for each python project, so I've understood. Getting up and running with that is simple, if you remember how you did it - case in point. So, now I can get a simple Flask App going in less than 3 minutes - thanks to my cheat sheet.

Bored yet? Okay. Well, as for my update it's been a month working for pay (awesome) during my internship. I've been left to my own devices for the most part except for a brief stint in a facebook application.

For my work on the team project I was asked to pull images from a PSD (photoshop design) and create a grid framework for the app. I'd never used photoshop before and I wouldn't mind never using it again though it was extremely informative. The design images were layered and it took awhile to figure out how to keep the shape of the image but lose the configurations of photoshop. I've avoided photoshop in the past and now regret that decision. It is such a worthwile skill to at least know how to navigate the software. As for the grid framework my experience is with "quick and easy" so I used bootstrap to create a simple repeating layout. I was a little nervous about going with this shortcut but since I'm working in a prototype department it went over smoothly.

For my independent work - OMG! I dove into APIs since that is what my internship is focussed on. I have learned so much about web development this month - crazytown. It got me thinking about what it means to be a web developer and how to get there. I feel so close but so far. But tinkering and getting my hands dirty with real live data has steered my learning into overdrive. I can't believe that I can imagine what I want to do with an API and then go at it, success, break, succes, break, and there it is - what I wanted to do with it. I can't express the joy/wonder/fear/humbleness that this brings. Anyway...I've been scouring a bunch of APIs to see what I can do with them in a crazy mashup. Since the folks here like python I've been working in that and using Flask to create quick prototypes that test them out and see what I can get. I won't go into the boring details but I've practiced with connecting with at least 7 APIs and couldn't be happier. Unless Instagram makes it easier - that shit's a mess. Oh, and Pinterest - yeah...it's okay to have an API - JOIN US! (coaxes slowly with a carrot).

I do want to talk about something more theoretical though. It's about being a web developer in general. I've hit a point that I feel confident that I can figure things out (which is what it's all about really) but I know I didn't understand this a few months ago. It's hard to become a web developer. It's not "just take a few courses and you're on your way" kind of BS. Most employers want people who know their stuff and as a newbie you are going to be a liability or a charity. Which is harsh but from my newbie perspective is the truth. Why would a company take a chance with you (even if you cost a whole lot less) if you end up breaking their code or take time away from the more experienced coders? Which is why (my opinion) there is a constant need for developers but a huge amount of CS grads that can't find jobs. So, my advice for newbies like myself and recent grads and almost recent grads: make stuff! Make a portfolio with things you want to make. Don't have any ideas? Meet those folks who do and you will have either a startup yourself or at the least a real example of how you get stuff done. And honestly, it's been about a year since I decided to become a developer and I'm still not ready. It takes awhile. Be patient - if you want it, it will happen. It's worth it.