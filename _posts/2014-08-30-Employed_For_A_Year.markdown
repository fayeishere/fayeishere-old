---
layout: post
title: "Employed For A Year"
date: 2014-08-30 15:18
comments: true
categories:
---
I haven't blogged in quite awhile and thought that my work anniversary would be a good time to reflect and update. A little backtracking: After interning for 3 months I was offered a contract, basically an extension, for another 3 months with the title of junior developer. During that time I was tasked with a variety of projects big and small. I learned an enormous amount, mostly focusing on front-end, and boosted my confidence that I was indeed a coder. When my contract was coming to an end I became nervous. I needed to sign up for health care, I still had a big code school bill looming, and wasn’t sure what I’d do if I wasn’t offered a position. I had spent a year at this point coding and pushing to break into a higher paying tier than I had been in for my entire life. It was a huge relief when I was offered a full time position which included benefits. Phew! It’s also a pretty awesome feeling to be ‘one of us’ and not a just a potential visitor.

And without an expiration date new projects piled on and I was kept pretty busy. I learned a lot more about javascript and DOM quirks. Simple HTML/CSS tricks began to imprint on me and I was able to start new projects much quicker. I became organized-ish by making lists of TODOs for each project and saving them for quick reference if I needed. During review time this was awesome because I could easily backtrack and list off exactly what I had accomplished in a year, which was over 15 projects. Wow!

The hardest thing I’ve been learning is balance. Coming from blue-collar work with restrictions and clear expectations to a more free and open one is challenging. Which might sound weird. Of course, it’s great to not have to worry about being a few minutes late or not needing to put in 5 requests for a simple dentist appointment, but there were weeks where I’d work so much that it was unhealthy. Knowing when to take breaks and how to say “no” was something I never had done before. I just pushed as hard as I could to prove myself and do a “good” job. But burnout is real and understanding your own boundaries is huge. I’m still getting the hang of that. The moment I see myself not caring about a particular project means that I’ve pushed myself too much and I need to take a step back. I’m hoping that with more experience I can get to a place so that doesn’t happen in the first place. Taking a personal day and/or planning vacation timing is one solution. Exercise and diet is also important. The first thing that gets sacrificed when there is a deadline is taking those walk breaks and spending time to cook healthy meals. Far too often I’d not move for hours and then run across the street and stuff my face with a heart attack of a burger.

As for coding there are some tips I’ve discovered for myself. Every project is totally different but many times I’m tasked with simple static pages. For these I use a basic HTML boilerplate and build for desktop if there is an immediate deadline. Then, once design changes have been mostly approved I move on to either browser scaling (if responsive is needed) or focus on mobile and then tablet. This may change over time but that’s what works for now. My favorite framework is skeleton - super light and easily customizable. I stopped using bootstrap because it was almost unusable for design specific purposes. I also stopped using plug-ins. They are a nightmare if you need to tweak and such. I’m sure a more experienced developer would have no problem - but I kept spending way too much time inspecting someone else’s code when I could have just made the thing myself. And everytime I do build features myself I can easily reuse it in another project.

When I first started my internship I used Flask (python) to create a bunch of little prototypes that connected to a variety of APIs. Whenever there was downtime over the year (not much!) I’d go back to it and sometimes create a new little project with APIs as the theme. I love pulling in free data. I then had an idea that was a bit big for Flask so I started learning Django. That’s where I’m at right now. I’m also expanding my javascript knowledge by looking at a coworker’s code and going through a few courses that I skimmed over in the past. I’d like to learn a few frameworks as well. There’s so much to learn!